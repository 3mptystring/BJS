// This file is automatically generated by meteor-jsdoc. Regenerate it with 'meteor-jsdoc build'
DocsData = {
  "decrypt": {
    "filename": "crypto.js",
    "filepath": "https://github.com/TheMegaTB/BJS/blob/master/meteor/imports/api/crypto/crypto.js",
    "kind": "function",
    "lineno": 36,
    "longname": "decrypt",
    "name": "decrypt",
    "params": [
      {
        "description": "<p>encrypted and signed data</p>",
        "name": "SED"
      },
      {
        "description": "<p>auth. code of the group</p>",
        "name": "groupAC"
      }
    ],
    "returns": [
      {
        "description": "<p>either the decrypted data or false if the signature verification failed</p>",
        "type": {
          "names": [
            "boolean",
            "object"
          ]
        }
      }
    ],
    "scope": "global",
    "summary": "Decrypt the signed data and check the signatures."
  },
  "encrypt": {
    "filename": "crypto.js",
    "filepath": "https://github.com/TheMegaTB/BJS/blob/master/meteor/imports/api/crypto/crypto.js",
    "kind": "function",
    "lineno": 77,
    "longname": "encrypt",
    "name": "encrypt",
    "params": [
      {
        "description": "<p>Data to encrypt</p>",
        "name": "data"
      },
      {
        "description": "<p>Group auth. code</p>",
        "name": "groupAC"
      },
      {
        "description": "<p>Station auth. code</p>",
        "name": "stationAC"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean",
            "Object"
          ]
        }
      }
    ],
    "scope": "global",
    "summary": "Encrypt data and sign it"
  },
  "generateAC": {
    "filename": "crypto.js",
    "filepath": "https://github.com/TheMegaTB/BJS/blob/master/meteor/imports/api/crypto/crypto.js",
    "kind": "function",
    "lineno": 58,
    "longname": "generateAC",
    "name": "generateAC",
    "params": [
      {
        "description": "<p>passwd to generate the auth. code from</p>",
        "name": "password"
      },
      {
        "description": "<p>[random] optional salt to recreate a auth. code</p>",
        "name": "salt"
      }
    ],
    "returns": [
      {
        "description": "<p>authentication code</p>",
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "global",
    "summary": "Generates a authentication code for"
  },
  "tryDecrypt": {
    "filename": "crypto.js",
    "filepath": "https://github.com/TheMegaTB/BJS/blob/master/meteor/imports/api/crypto/crypto.js",
    "kind": "function",
    "lineno": 93,
    "longname": "tryDecrypt",
    "name": "tryDecrypt",
    "params": [
      {
        "description": "<p>Logger instance to use</p>",
        "name": "log"
      },
      {
        "description": "<p>signed and encrypted data object</p>",
        "name": "SED"
      },
      {
        "description": "<p>array of authentication codes</p>",
        "name": "acs"
      }
    ],
    "returns": [
      {
        "description": "<p>Object containing the data and the signatureEnforced property (whether or not the data has been checked against the station's AC) or false in case something went wrong or decryption/signature checking isn't possible or unsuccessful</p>",
        "type": {
          "names": [
            "*",
            "boolean"
          ]
        }
      }
    ],
    "scope": "global",
    "summary": "Attempts to decrypt a given SED (signed and encrypted data) with the given ACs"
  }
};